# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8-cls image classification model. For Usage examples see https://docs.ultralytics.com/tasks/classify

# Parameters
nc: 1  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  #n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  #m: [0.67, 0.75, 1024]
  #l: [1.00, 1.00, 1024]
  #x: [1.00, 1.25, 1024]

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args] 1280*1280*3
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2 2 640*640*64
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4 4 320*320*128
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8 8 160*160*256
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16 16 80*80*512
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32 32 40*40*1024
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 9
# YOLOv8.0n head
#head:
#  - [-1, 1, Classify, [nc]]  # Classify
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 80*80*1024
  - [[-1, 6], 1, Concat, [1]]  # cat backbone P4 80*80*1536
  - [-1, 3, C2f, [512]]  # 12 80*80*512

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 160*160*512
  - [[-1, 4], 1, Concat, [1]]  # cat backbone P3 160*160*768
  - [-1, 3, C2f, [256]]  # 15 (P3/8-small) 160*160*256

  - [-1, 1, Conv, [256, 3, 2]] # 80*80*256
  - [[-1, 12], 1, Concat, [1]]  # cat head P4 80*80*768
  - [-1, 3, C2f, [1024]]  # 18 (P4/16-medium)80*80*512

#  - [-1, 1, Conv, [512, 3, 2]] #160
#  - [[-1, 9], 1, Concat, [1]]  # cat head P5
#  - [-1, 3, C2f, [1024]]  # 21 (P5/32-large)
